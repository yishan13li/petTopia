package petTopia.model.vendor;

import java.util.Date;
import java.util.List;

<<<<<<< HEAD
=======
import org.hibernate.annotations.BatchSize;

>>>>>>> f3/luo
import com.fasterxml.jackson.annotation.JsonIgnore;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
<<<<<<< HEAD
=======
import jakarta.persistence.FetchType;
>>>>>>> f3/luo
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
<<<<<<< HEAD
import jakarta.persistence.Table;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@Getter
@Setter
@NoArgsConstructor
@Table(name = "vendor_activity")
@Entity
public class VendorActivity {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "id")
	private Integer id;

	@ManyToOne
	@JoinColumn(name = "vendor_id")
	private Vendor vendor;

	@Column(name = "name")
	private String name;

	@Column(name = "description")
	private String description;

	@Column(name = "start_time")
	private Date startTime;

	@Column(name = "end_time")
	private Date endTime;

	@Column(name = "is_registration_required")
	private Boolean isRegistrationRequired;

	@ManyToOne
	@JoinColumn(name = "activity_type_id")
	private ActivityType activityType;

	@Column(name = "registration_date")
	private Date registrationDate;

	@Column(name = "number_visitor")
	private Integer numberVisitor;

	@Column(name = "address")
=======
import jakarta.persistence.OneToOne;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

@Entity
@Table(name = "vendor_activity")
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor

public class VendorActivity {
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	private Integer id;

	@JsonIgnore
	@ManyToOne
	@JoinColumn(name = "vendor_id", nullable = false)
	private Vendor vendor;

	@Column(name = "name", nullable = false)
	private String name;

	@Column(name = "description", nullable = false)
	private String description;

	@Column(name = "start_time", nullable = false)

	private java.util.Date startTime;

	@Column(name = "end_time", nullable = false)

	private java.util.Date endTime;

	@Column(name = "is_registration_required", nullable = false)
	private boolean isRegistrationRequired = false;

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "activity_type_id", nullable = false)
	private ActivityType activityType;

	@Column(name = "registration_date", updatable = false)

	private java.util.Date registrationDate = new Date();

	@Column(name = "number_visitor", nullable = false)
	private int numberVisitor = 0;

	@Column(name = "address", nullable = false)
>>>>>>> f3/luo
	private String address;

	@JsonIgnore
	@OneToMany(mappedBy = "vendorActivity", cascade = CascadeType.ALL)
<<<<<<< HEAD
	private List<VendorActivityImages> vendorActivityImages;
}
=======
	@BatchSize(size = 20)
	private List<VendorActivityImages> images;

	@JsonIgnore
	public List<VendorActivityImages> getVendorActivityImages() {
		// TODO Auto-generated method stub
		return images;
	}

	@OneToOne(mappedBy = "vendorActivity", cascade = CascadeType.ALL, fetch = FetchType.LAZY)
	private ActivityPeopleNumber activityPeopleNumber;
}
>>>>>>> f3/luo
